name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            arch: x86_64
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            arch: x86_64
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            arch: aarch64
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            arch: x86_64
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v4

    - name: install dependencies (mac x86_64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'x86_64'
      run: |
        rustup show
        rustup target add x86_64-apple-darwin

    - name: Build (mac x86_64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'x86_64'
      run: cargo build --target x86_64-apple-darwin --verbose

    - name: Build (mac aarch64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'aarch64'
      run: cargo build --verbose
    
    - name: Build
      if: matrix.config.os != 'macos-latest'
      run: cargo build --verbose

    - name: Run tests (mac x86_64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'x86_64'
      run: cargo test --target x86_64-apple-darwin --verbose
    
    - name: Run tests (mac aarch64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'aarch64'
      run: cargo test --verbose
      
    - name: Run tests
      if: matrix.config.os != 'macos-latest'
      run: cargo test --verbose

    - name: Run (mac x86_64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'x86_64'
      run: cargo run --target x86_64-apple-darwin
      
    - name: Run (mac aarch64 only)
      if: matrix.config.os == 'macos-latest' && matrix.config.arch == 'aarch64'
      run: cargo run

    - name: Run
      if: matrix.config.os != 'macos-latest'
      run: cargo run
